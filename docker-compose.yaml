version: '3'
services:

#### Admin panel service

  admin_panel:
    container_name: django_panel
    build:
      context: ./admin_panel/django_api/movies_admin/
    env_file:
      - ./.env
    depends_on:
      - postgres
    ports:
      - 8002:8000
    networks:
      - appnet


#### Authentication service
  auth_backend:
    container_name: auth_service
    build:
      context: ./auth
    env_file:
      - ./.env
    ports:
      - 8000:8000
    networks:
      - appnet
    depends_on:
      - postgres
      - redis

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - appnet

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=username
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - appnet

  #### AsyncApi service

  fastapi_async_api:
     container_name: fastapi_async_api
     build:
       context: ./async_api
     env_file:
       - ./.env
     ports:
       - 8001:8000
     networks:
       - appnet

  elasticsearch_async_api:
       container_name: elasticsearch_async_api
       image: elasticsearch:8.6.2
       env_file:
         - ./.env
       ports:
         - 9200:9200
       networks:
         - appnet
       depends_on:
         - redis

  etl_async_api:
      container_name: etl_async_api
      build:
        context: async_api/etl
      restart: always
      env_file:
        - ./.env
      depends_on:
        - postgres
        - elasticsearch_async_api
      networks:
        - appnet
      command: bash start_etl.sh

#### Databases

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - appnet

  postgres:
    container_name: postgres
    image: postgres:15.7
    restart: always
    env_file:
      - ./.env
    ports:
      - 5432:5432
    networks:
      - appnet



networks:
  appnet:
    driver: bridge